@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

@property --mask-size {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 100%;
}

@property --colors {
  syntax: "<color>#";
  inherits: true;
  initial-value: transparent;
}

@property --gradient {
  syntax: "<image>";
  inherits: true;
  initial-value: transparent;
}

html {
  height: 100%;
}

body {
  background: #111;
  display: grid block;
  grid-template-rows: 1fr min-content 1fr;
  grid-template-columns: 1fr min-content 1fr;
  min-height: 100%;
  gap: 8px;
}

/* form {
  --colors: #333, #333, #333, #333;
  --gradient: conic-gradient(from var(--angle), var(--colors));*/
    @keyframes rotate-gradient {
    from {
      --angle: 0turn;
    }
    to {
      --angle: 1turn;
    }
  }

  transition: --colors 0.75s, --mask-size 5s;
  display: grid;
  grid-template-columns: subgrid;
  place-self: center;
  grid-column: 2;
  grid-row: 2;
  gap: 8px;
  padding: 16px;
  animation: rotate-gradient 20s linear infinite; */
  &:valid {
    /* --colors: #fd6735, #eab948, #a697d8, #fd6735; */
  }
  &.submit {
    --mask-size: 0%;
    button {
      color: transparent;
    }
    label {
      z-index: -2;
      transition: z-index 0s 0s;
    }
    .loader {
      transition: visibility 01s 1s;
      visibility: visible;
    }
  }
  &::before {
    content: "";
    display: block;
    border-radius: 10px;
    grid-column: 2;
    grid-row: 1 / 4;
    padding: 2px;
    margin: -16px;
    mask: radial-gradient(
          #fff 0 var(--mask-size),
          transparent var(--mask-size) 100%
        )
        content-box exclude,
      linear-gradient(#fff 50% 50%);
    z-index: -1;
    background: var(--gradient);
    background-attachment: fixed;
    pointer-events: none;
  }
  input {
    appearance: none;
    border: none;
    flex-grow: 1;
    background: transparent;
    color: #333;
    &:focus {
      outline: none;
    }
  }
  label {
    z-index: 0;
    transition: z-index 0s 1s;
    border-radius: 25px;
    padding: 8px;
    background: #eee;
    display: flex;
    border: 2px solid transparent;
    box-sizing: border-box;
    &:focus-within {
      border: 2px solid transparent;
    }
    box-sizing: border-box;
    height: 35px;
  }
  label::before {
    content: attr(data-placeholder) ": ";
    display: inline;
    color: #888;
    font-family: sans-serif;
  }
  &:valid:not(.submit) button {
    color: black;
    cursor: pointer;
  }
  button {
    border: none;
    border-radius: 20px;
    padding: 8px;
    background-image: conic-gradient(from var(--angle), var(--colors));
    color: white;
    font-weight: bold;
    font-family: sans-serif;
    letter-spacing: 0.75px;
    background-attachment: fixed;
    transition: color 0.25s;
    text-shadow: 0 0 4px rgba(0, 0,0.25);
    background-color: #333;

  }

  .loader {
    display: flex;
    justify-content: space-around;
    align-items: center;
    border-radius: 10px;
    grid-column: 2;
    grid-row: 1 / 4;
    margin: -16px;
    visibility: hidden;
    background: #000;
    overflow: hidden;
    /* .dot{
      background: var(--gradient);
      background-attachment: fixed;
      width: 100%;
      height: 100%;
      border-radius: 0px;
      transition: width 0.5s 1s, height 0.5s 1s, border-radius 0.5s 1s;
    } */
  }
h1{
  color:#fd6735;
  text-align: center;
  font-family: 'Courier New', Courier, monospace;
  font-style: italic;
  font-weight: 100;

}

  &.submit .loader .dot {
    width: 50px;
    height: 50px;
    border-radius: 30px;
    animation: dot-bob 2s infinite ease-in-out;
    position: relative;
    @for $i from 1 through 3 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i/4 + 1.5}s;
      }
    }
  }


@keyframes dot-bob {
  0%,
  80% {
    top: 0px;
  }
  20% {
    top: 40px;
  }
  60% {
    top: -40px;
  }
}
